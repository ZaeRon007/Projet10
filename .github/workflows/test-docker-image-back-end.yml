name: Run tests in bobapp-back

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    defaults: 
      run:
        working-directory: ./back

    steps:
      # R√©cup√©ration du d√©p√¥t GitHub
      - name: Checkout repository
        uses: actions/checkout@v4

      # Connexion √† DockerHub (si l'image est priv√©e)
      - name: Log into DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # T√©l√©chargement de l'image Docker g√©n√©r√©e
      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest

      # Lancement des tests Maven
      - name: Build with Maven
        run: mvn clean compile --file pom.xml

      - name: Test with Maven
        run: mvn test --file pom.xml

       # G√©n√©ration du rapport JaCoCo
      - name: Generate JaCoCo Report
        run: mvn verify --file pom.xml

      # Archive le rapport de couverture JaCoCo
      - name: Config JaCoCo Coverage Report
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: |
            ${{ github.workspace }}/back/target/site/jacoco/jacoco.xml
          token: ${{ secrets.DOCKER_GITHUB_TOKEN }}
          title: Code Coverage
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          pass-emoji: üçè
          fail-emoji: ‚ùå
          debug-mode: false

      # Affiche le r√©sultat du code coverage
      - run: echo "Code coverage ${{ steps.jacoco.outputs.coverage-overall }}"

      # Commit le rapport JaCoCo
      - name: Commit Jacoco Code Coverage Report
        run: |
          git config --global user.email "julien.pelissier8@orange.fr"
          git config --global user.name "ZaeRon007"
          git fetch
          git checkout features
          git pull origin features
          git add target/site
          git commit -m "Addition of JaCoCo code coverage report"
          git push origin features
      - run: echo "Mvn Test's status is ${{ job.status }}."